@model Web.Models.Menu.MenuModel
@{
    int startPageNum;
    int endPageNum;
    ViewData["Title"] = "Menu";
    Layout = "_Layout";
    if (Model.TotalPagesNum > 7)
    {
        if (Model.PageNum > 7)
        {
            startPageNum = Model.PageNum - 3;
            endPageNum = Model.PageNum + 3 > Model.TotalPagesNum ? Model.TotalPagesNum : Model.PageNum + 3;
        }
        else
        {
            startPageNum = 1;
            endPageNum = 7;
        }
    }
    else
    {
        startPageNum = 1;
        endPageNum = Model.TotalPagesNum;
    }


}
<!DOCTYPE HTML>
<html lang="en">
<head>
    @section head{
        <link rel="stylesheet" href="~/css/MenuStyle.css" />
        <script type="text/javascript" src="~/js/MenuScript.js"></script>
    }
    </head>
<body>
    <button type="button" id="new-item-button">New entry</button>
    <main>
        <table id="search-table">
            <tr id="search-row">
                <td class="search-bar"><input type="text" name="Title" value="" placeholder="Title" /></td>
                <td class="search-bar"><input type="text" name="Description" value="" placeholder="Description" /></td>
                <td class="search-bar"><input type="text" name="Ingredients" value="" placeholder="Ingredients" /></td>
                <td class="search-bar"><input type="text" name="Grams" value="" placeholder="Grams" /></td>
                <td class="search-bar"><input type="text" name="Calories" value="" placeholder="Calories" /></td>
                <td class="search-bar"><input type="text" name="CookingTime" value="" placeholder="CookingTime" /></td>
                <td class="search-bar"><input type="text" name="Price" value="" placeholder="Price" /></td>
                <td class="search-bar"><input type="text" name="CreationDate" value="" placeholder="Creation Date" /></td>
            </tr>
        </table>
        <table id="items-table" border="1">

            <tr id="@Model.OrderParams">
                <th class="column-name" id="title">Title</th>
                <th class="column-name" id="description">Description</th>
                <th class="column-name" id="ingredients">Ingredients</th>
                <th class="column-name" id="grams">Grams</th>
                <th class="column-name" id="calories">Calories</th>
                <th class="column-name" id="cookingtime">Cooking time</th>
                <th class="column-name" id="price">Price</th>
                <th class="column-name" id="creationdate">Creation Date</th>
            </tr>
            <tbody id="menu-items-rows">
                @(await Html.PartialAsync("_MenuItemsTableData.cshtml", Model.MenuItems))
            </tbody>
            <!--Html.RenderPartialAsync("_MenuItemsTableData.cshtml", Model.MenuItems) How does that work-->
        </table>
        <table id="pagination">
            <tr>
                @for (int i = startPageNum; i <= endPageNum; i++)
                {
                    if (i == Model.PageNum)
                    {
                        <td>@i</td>
                        continue;
                    }
                    <td><a href="/menu?page=@i">@i</a></td>
                }
            </tr>
        </table>

    </main>
    @section footer_content{
        <span style="margin-left: 15px; margin-top:20px; font-size:12px; color:aliceblue;">Showing @Model.MenuItems.Count item(s) out of the total number of @Model.TotalItemsNum items</span>
    }


    @section complementary{
        <script>

            var orderParams = {
                column: "@Model.OrderParams.Split("-")[0]",
                type: "@Model.OrderParams.Split("-")[0]",
                formerColumn: ""
            }
            var searchFileds = {
                titleVal: '',
                descrVal: '',
                ingredVal: '',
                gramsVal: '',
                calVal: '',
                cookTimeVal: '',
                priceVal: '',
                createDatVal: '',
            }

            @if (Model.SearchFields != null)
            {
                @:searchFileds.titleVal = '@(Model.SearchFields.Title == default ? "": Model.SearchFields.Title)';
                @:searchFileds.descrVal = '@(Model.SearchFields.Description == default ? "": Model.SearchFields.Description)';
                @:searchFileds.ingredVal = '@(Model.SearchFields.Ingredients == default ? "": Model.SearchFields.Ingredients)';
                @:searchFileds.gramsVal = '@(Model.SearchFields.Grams == default ? "": Model.SearchFields.Grams.ToString())';
                @:searchFileds.calVal = '@(Model.SearchFields.Calories == default ? "": Model.SearchFields.Calories.ToString())';
                @:searchFileds.cookTimeVal = '@(Model.SearchFields.CookingTime == default ? "": Model.SearchFields.CookingTime.ToString())';
                @:searchFileds.priceVal = '@(Model.SearchFields.Price == default ? "": Model.SearchFields.Price.ToString())';
                @:searchFileds.createDatVal = '@(Model.SearchFields.CreationDate == default? "": Model.SearchFields.CreationDate.ToString())';

            }
        </script>
    }
</body>

</html>
